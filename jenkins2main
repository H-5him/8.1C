pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/H-5him/8.1C.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('Run Tests') {
      steps {
        sh 'npm test || true'
      }
      post {
        success {
          emailext(
            to: 'hashimplay1@gmail.com',
            subject: "‚úÖ Tests PASSED: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
            body: """<p>Good news! Tests passed.</p>
                     <p>See console output at: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>""",
            mimeType: 'text/html',
            attachmentsPattern: 'npm-debug.log'
          )
        }
        failure {
          emailext(
            to: 'hashimplay1@gmail.com',
            subject: "‚ùå Tests FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
            body: """<p>Oh no‚Äîtests failed!</p>
                     <p>See console output at: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>""",
            mimeType: 'text/html',
            attachmentsPattern: 'npm-debug.log'
          )
        }
      }
    }

    stage('Generate Coverage Report') {
      steps {
        sh 'npm run coverage || true'
      }
    }

    stage('NPM Audit (Security Scan)') {
      steps {
        sh 'npm audit || true'
      }
      post {
        always {
          emailext(
            to: 'hashimplay1@gmail.com',
            subject: "üîí Audit Complete: ${env.JOB_NAME} #${env.BUILD_NUMBER} ‚Äî ${currentBuild.currentResult}",
            body: """<p>Security audit finished with status: ${currentBuild.currentResult}.</p>
                     <p>Report and full logs at: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>""",
            mimeType: 'text/html',
            attachmentsPattern: 'npm-debug.log'
          )
        }
      }
    }
  }
}
